<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fs.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.fs.model.Order">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="people" jdbcType="VARCHAR" property="people" />
    <result column="custmer" jdbcType="VARCHAR" property="custmer" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="becauser" jdbcType="VARCHAR" property="becauser" />
  </resultMap>
  
  <sql id="Base_Column_List">
    order_id, product_name, price, number, people, custmer, state, time, becauser
  </sql>
  
 
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fs.model.Order">
    insert into order (order_id, product_name, price, 
      number, people, custmer, 
      state, time, becauser
      )
    values (#{orderId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{people,jdbcType=VARCHAR}, #{custmer,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{becauser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fs.model.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="people != null">
        people,
      </if>
      <if test="custmer != null">
        custmer,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="becauser != null">
        becauser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="people != null">
        #{people,jdbcType=VARCHAR},
      </if>
      <if test="custmer != null">
        #{custmer,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="becauser != null">
        #{becauser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fs.model.Order">
    update order
    <set>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="people != null">
        people = #{people,jdbcType=VARCHAR},
      </if>
      <if test="custmer != null">
        custmer = #{custmer,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="becauser != null">
        becauser = #{becauser,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fs.model.Order">
    update order
    set product_name = #{productName,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      people = #{people,jdbcType=VARCHAR},
      custmer = #{custmer,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      becauser = #{becauser,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  
  
  <!-- 查询所有订单列表 -->
 <select id="queryOrderList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `order` ORDER BY time DESC
  </select>
  
  
  <!-- 新增订单 -->
  <insert id="addOrder" parameterType="com.fs.model.Order">
  	insert into `order` 
  	(order_id,product_name,price,number,people,custmer,state,time,becauser) 
  	values (#{orderId},
  			#{productName},
  			#{price},
  			#{number},
  			#{people},
  			#{custmer},
  			#{state},
  			now(),
  			#{becauser}
  	)
  </insert>
  
  <!-- 新增订单，并且同步到仓库审核 -->
	<insert id="insertIntoAudit" >
		insert into `audit` 
  	(dep_send,dep_receve,people_send,state,becauser,product_name,price,number,custmer,order_id,time,sta) 
  	values (#{dep_send},
  			#{dep_recv},
  			#{people_send},
  			#{state},
  			#{becauser},
  			#{productName},
  			#{price},
  			#{number},
  			#{custmer},
  			#{orderId},
  			now(),
  			#{sta}
  	)
	</insert>
  
  <!-- 通过orderId删除订单 -->
  <delete id="deleteOrder" parameterType="java.lang.Integer">
  	delete from `order` where order_id = #{orderId} 
  </delete>

  
  <!-- 修改订单信息 -->
  <update id="renewOrder">
  	update `order` set product_name = #{productName},price = #{price},number = #{number},
  	people = #{people},custmer = #{custmer},becauser=#{becauser} where order_id = #{orderId}
  </update>
  
  <!-- 修改订单信息 -->
  <update id="updateOrder">
  	update `audit` set product_name = #{productName},price = #{price},number = #{number},
  	custmer = #{custmer},becauser=#{becauser} where order_id = #{orderId}
  </update>
  
  <!-- 销售管理模块：根据具体订单号查询到数据 -->
  <select id="queryOrderById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />
    from `order` where order_id = #{orderId}
  </select>
  
  <!-- 订单查询模块：根据客户名 -->
  <select id="queryOrderByName" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from `order`  where custmer = #{name}
    ORDER BY time DESC
   
  </select>
  
  <!-- 订单查询模块：根据订单号、产品名称、审核状态查询;多字段模糊查询 -->
  <select id="queryOrderByInput" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	 from `order`   
 	where concat(product_name,people,custmer,state) like #{inputMessage}  ORDER BY time DESC
  </select>
  
   <!-- 订单查询模块：根据订单号、产品名称、审核状态查询;多字段模糊查询 -->
  <select id="queryOrderByInputTwo" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	 from `order`   
 	where concat(product_name,people,custmer,state) like #{inputMessage} and order_id = #{inputOrderId}  ORDER BY time DESC
  </select>
   
   <!-- 订单查询模块：根据日期radio查询 -->
  <select id="queryOrderByTime"  resultMap="BaseResultMap">
  SELECT <include refid="Base_Column_List" /> FROM `order` 
  where DATE_SUB(SYSDATE(),${sdate}) &lt;= date(time)   
 	
  </select>
   
 <!-- 订单查询模块：根据checkBox选择的订单状态 -->
  <select id="queryOrderByChckBox"  resultMap="BaseResultMap">
  SELECT <include refid="Base_Column_List" /> FROM `order` 
  where state like #{checkBoxName}
 	
  </select>
  
   <!-- 销售统计模块：柱状图，记录订单完成状态 -->
  <select id="queryStaticData"  resultType="com.fs.model.Order">
  SELECT COUNT(*) as stateCount,state FROM `order` GROUP BY state   
  </select>
  
   <!-- 销售统计模块：柱状图，记录热销榜 -->
  <select id="queryStaticData2"  resultType="com.fs.model.Order">
  	SELECT SUM(number) as sumNum,product_name as productName FROM `order` GROUP BY product_name Order BY SUM(number) DESC
  </select>
  
  <!-- 销售统计模块：按周次记录订单数 -->
  <select id="queryStaticData4"  resultType="com.fs.model.Order">
  	SELECT SUM(number) as sumNum,WEEK(time) as weekTime FROM `order` GROUP BY WEEK(time) ORDER BY WEEK(time)
  </select>


<!-- 生成总销售额的折现图，通过时间分类（按一个月计算） -->
  <select id="queryStaticData3"  resultType="com.fs.model.Order">
  	SELECT SUM(number*price) as sumMoney,MONTH(time) as monthTime FROM `order` GROUP BY MONTH(time) ORDER BY MONTH(time) ASC
  </select>
  
 <!-- 订单管理模块：订单号搜索框自动补全orderId -->
 <select id="queryOrderId" resultType="java.lang.String">
 	select concat(order_id) as autoOrderId from `order`
 </select>
</mapper>